{"ast":null,"code":"var _jsxFileName = \"D:\\\\Full Stack React ver 2\\\\burger bulder in react\\\\src\\\\BurgerMaker\\\\BagerMaker.js\";\nimport React from 'react';\nimport Burger from '../component/Burger/Burger';\nimport BurgerControls from '../component/BurgerControls/BurgerControls';\nconst INGREDIANT_PRICE = {\n  salad: 5,\n  meat: 8,\n  bacon: 3,\n  cheese: 2\n};\n\nclass BagerMaker extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      ingrediant: {\n        meat: 0,\n        salad: 0,\n        bacon: 0,\n        cheese: 0\n      },\n      totalprice: 5,\n      purchased: false\n    };\n\n    this.addIngrediant = type => {\n      const oldCount = this.state.ingrediant[type];\n      const newCount = oldCount + 1;\n      const updatedIngrediant = { ...this.state.ingrediant\n      };\n      updatedIngrediant[type] = newCount;\n      const additionPrice = INGREDIANT_PRICE[type];\n      const oldPrice = this.state.totalprice;\n      const newPrice = oldPrice + additionPrice;\n      this.setState({\n        totalprice: newPrice,\n        ingrediant: updatedIngrediant\n      });\n    };\n\n    this.removeIngrediant = type => {\n      const oldCount = this.state.ingrediant[type];\n      const newCount = oldCount - 1;\n      const updatedIngrediant = { ...this.state.ingrediant\n      };\n\n      if (oldCount <= 0) {\n        return;\n      }\n\n      updatedIngrediant[type] = newCount;\n      const priceDiminished = INGREDIANT_PRICE[type];\n      const oldPrice = this.state.totalprice;\n      const newPrice = oldPrice - priceDiminished;\n      this.setState({\n        totalprice: newPrice,\n        ingrediant: updatedIngrediant\n      });\n    };\n  }\n\n  updatedPurchase(ingrediant) {\n    const sum = Object.keys(ingrediant).map(ingKey => {\n      return ingrediant[ingKey];\n    }).reduce((sum, el) => {});\n    this.setState({\n      purchased: sum > 0\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Burger, {\n      ingrediant: this.state.ingrediant,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(BurgerControls, {\n      addIngrediant: this.addIngrediant,\n      removeIngrediant: this.removeIngrediant,\n      price: this.state.totalprice,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 17\n      }\n    }));\n  }\n\n}\n\nexport default BagerMaker;","map":{"version":3,"sources":["D:/Full Stack React ver 2/burger bulder in react/src/BurgerMaker/BagerMaker.js"],"names":["React","Burger","BurgerControls","INGREDIANT_PRICE","salad","meat","bacon","cheese","BagerMaker","Component","state","ingrediant","totalprice","purchased","addIngrediant","type","oldCount","newCount","updatedIngrediant","additionPrice","oldPrice","newPrice","setState","removeIngrediant","priceDiminished","updatedPurchase","sum","Object","keys","map","ingKey","reduce","el","render"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport Burger from '../component/Burger/Burger'\r\nimport BurgerControls from '../component/BurgerControls/BurgerControls'\r\n\r\nconst INGREDIANT_PRICE = {\r\n    salad: 5,\r\n    meat: 8,\r\n    bacon: 3,\r\n    cheese: 2\r\n}\r\n\r\nclass BagerMaker extends React.Component {\r\n\r\n    state = {\r\n        ingrediant: {\r\n            meat: 0,\r\n            salad: 0,\r\n            bacon: 0,\r\n            cheese: 0\r\n        },\r\n        totalprice: 5,\r\n        purchased: false\r\n\r\n    }\r\n\r\n\r\n    updatedPurchase(ingrediant) {\r\n        const sum = Object.keys(ingrediant)\r\n            .map(ingKey => {\r\n                return ingrediant[ingKey]\r\n            }).reduce((sum,el)=>{\r\n                \r\n            })\r\n\r\n        this.setState({\r\n            purchased: sum > 0\r\n        })\r\n\r\n    }\r\n\r\n\r\n    addIngrediant = (type) => {\r\n        const oldCount = this.state.ingrediant[type];\r\n        const newCount = oldCount + 1;\r\n        const updatedIngrediant = {\r\n            ...this.state.ingrediant\r\n        }\r\n\r\n        updatedIngrediant[type] = newCount;\r\n        const additionPrice = INGREDIANT_PRICE[type];\r\n        const oldPrice = this.state.totalprice;\r\n        const newPrice = oldPrice + additionPrice;\r\n        this.setState({ totalprice: newPrice, ingrediant: updatedIngrediant })\r\n\r\n    }\r\n\r\n\r\n    removeIngrediant = (type) => {\r\n\r\n        const oldCount = this.state.ingrediant[type];\r\n        const newCount = oldCount - 1;\r\n        const updatedIngrediant = {\r\n            ...this.state.ingrediant\r\n        }\r\n\r\n        if (oldCount <= 0) {\r\n            return;\r\n        }\r\n\r\n        updatedIngrediant[type] = newCount;\r\n        const priceDiminished = INGREDIANT_PRICE[type];\r\n        const oldPrice = this.state.totalprice;\r\n        const newPrice = oldPrice - priceDiminished;\r\n        this.setState({ totalprice: newPrice, ingrediant: updatedIngrediant })\r\n\r\n    }\r\n\r\n\r\n    render() {\r\n\r\n        return (\r\n            <div>\r\n                <Burger ingrediant={this.state.ingrediant} />\r\n                <BurgerControls\r\n                    addIngrediant={this.addIngrediant}\r\n                    removeIngrediant={this.removeIngrediant}\r\n                    price={this.state.totalprice}\r\n\r\n                />\r\n\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default BagerMaker;\r\n"]},"metadata":{},"sourceType":"module"}