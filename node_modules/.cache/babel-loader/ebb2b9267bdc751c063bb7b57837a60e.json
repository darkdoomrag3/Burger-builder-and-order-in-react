{"ast":null,"code":"var _jsxFileName = \"D:\\\\Full Stack React ver 2\\\\burger bulder in react\\\\src\\\\BurgerMaker\\\\BagerMaker.js\";\nimport React from 'react';\nimport Burger from '../component/Burger/Burger';\nimport BurgerControls from '../component/BurgerControls/BurgerControls';\nimport OrderSummery from '../component/OrderSummery/OrderSummery';\nimport Modal from '../component/UI/Modal/Modal';\nimport axios from '../axios-order';\nimport Spinner from '../component/UI/Spinner/Spinner';\nconst INGREDIANT_PRICE = {\n  salad: 5,\n  meat: 8,\n  bacon: 3,\n  cheese: 2\n};\n\nclass BagerMaker extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      ingrediant: null,\n      totalprice: 5,\n      purchased: false,\n      purchasing: false,\n      loading: false\n    };\n\n    this.addIngrediant = type => {\n      const oldCount = this.state.ingrediant[type];\n      const newCount = oldCount + 1;\n      const updatedIngrediant = { ...this.state.ingrediant\n      };\n      updatedIngrediant[type] = newCount;\n      const additionPrice = INGREDIANT_PRICE[type];\n      const oldPrice = this.state.totalprice;\n      const newPrice = oldPrice + additionPrice;\n      this.setState({\n        totalprice: newPrice,\n        ingrediant: updatedIngrediant\n      });\n      this.updatedPurchase(updatedIngrediant);\n    };\n\n    this.purchasingHandler = () => {\n      this.setState({\n        purchasing: true\n      });\n    };\n\n    this.removeIngrediant = type => {\n      const oldCount = this.state.ingrediant[type];\n      const newCount = oldCount - 1;\n      const updatedIngrediant = { ...this.state.ingrediant\n      };\n\n      if (oldCount <= 0) {\n        return;\n      }\n\n      updatedIngrediant[type] = newCount;\n      const priceDiminished = INGREDIANT_PRICE[type];\n      const oldPrice = this.state.totalprice;\n      const newPrice = oldPrice - priceDiminished;\n      this.setState({\n        totalprice: newPrice,\n        ingrediant: updatedIngrediant\n      });\n      this.updatedPurchase(updatedIngrediant);\n    };\n\n    this.purchasingCancelHandler = () => {\n      this.setState({\n        purchasing: true\n      });\n    };\n\n    this.purchaseContinue = () => {\n      this.setState({\n        loading: true\n      });\n      const order = {\n        ingrediant: this.state.ingrediant,\n        price: this.state.totlaprice,\n        customer: {\n          zipCode: '41281',\n          country: 'Canada',\n          name: 'Emad'\n        },\n        email: 'test@test.com'\n      };\n      axios.post('/orders.json', order).then(response => {\n        this.setState({\n          loading: false,\n          purchasing: false\n        });\n      }).catch(error => this.setState({\n        loading: false,\n        purchasing: false\n      }));\n    };\n  }\n\n  componentDidMount() {\n    axios.get('https://burger-bulder-638c4.firebaseio.com/ingrediant.json').then(response => {\n      this.setState({\n        ingrediant: response.data\n      });\n    }).catch(error => {});\n  }\n\n  updatedPurchase(ingrediant) {\n    const sum = Object.keys(ingrediant).map(ingKey => {\n      return ingrediant[ingKey];\n    }).reduce((sum, el) => {\n      return sum + el;\n    }, 0);\n    this.setState({\n      purchased: sum > 0\n    });\n  }\n\n  render() {\n    let orderSummery = null;\n    let burger = /*#__PURE__*/React.createElement(Spinner, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 22\n      }\n    });\n\n    if (this.state.ingrediant) {\n      burger = /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Burger, {\n        ingrediant: this.state.ingrediant,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 17\n        }\n      }), /*#__PURE__*/React.createElement(BurgerControls, {\n        addIngrediant: this.addIngrediant,\n        removeIngrediant: this.removeIngrediant,\n        price: this.state.totalprice,\n        ordered: this.purchasingHandler,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 17\n        }\n      }));\n      orderSummery = /*#__PURE__*/React.createElement(OrderSummery, {\n        ingrediant: this.state.ingrediant,\n        price: this.state.totalprice,\n        purchasingCanceledHandler: this.purchasingCancelHandler,\n        purchaseContinueHandler: this.purchaseContinue,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 24\n        }\n      });\n\n      if (this.state.loading) {\n        orderSummery = /*#__PURE__*/React.createElement(Spinner, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 147,\n            columnNumber: 28\n          }\n        });\n      }\n    }\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Modal, {\n      show: this.state.purchasing,\n      modalCanceld: this.purchasingCancelHandler,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 17\n      }\n    }, orderSummery), burger);\n  }\n\n}\n\nexport default BagerMaker;","map":{"version":3,"sources":["D:/Full Stack React ver 2/burger bulder in react/src/BurgerMaker/BagerMaker.js"],"names":["React","Burger","BurgerControls","OrderSummery","Modal","axios","Spinner","INGREDIANT_PRICE","salad","meat","bacon","cheese","BagerMaker","Component","state","ingrediant","totalprice","purchased","purchasing","loading","addIngrediant","type","oldCount","newCount","updatedIngrediant","additionPrice","oldPrice","newPrice","setState","updatedPurchase","purchasingHandler","removeIngrediant","priceDiminished","purchasingCancelHandler","purchaseContinue","order","price","totlaprice","customer","zipCode","country","name","email","post","then","response","catch","error","componentDidMount","get","data","sum","Object","keys","map","ingKey","reduce","el","render","orderSummery","burger"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,4BAAnB;AACA,OAAOC,cAAP,MAA2B,4CAA3B;AACA,OAAOC,YAAP,MAAyB,wCAAzB;AACA,OAAOC,KAAP,MAAkB,6BAAlB;AACA,OAAOC,KAAP,MAAkB,gBAAlB;AACA,OAAOC,OAAP,MAAoB,iCAApB;AAGA,MAAMC,gBAAgB,GAAG;AACrBC,EAAAA,KAAK,EAAE,CADc;AAErBC,EAAAA,IAAI,EAAE,CAFe;AAGrBC,EAAAA,KAAK,EAAE,CAHc;AAIrBC,EAAAA,MAAM,EAAE;AAJa,CAAzB;;AAOA,MAAMC,UAAN,SAAyBZ,KAAK,CAACa,SAA/B,CAAyC;AAAA;AAAA;AAAA,SAErCC,KAFqC,GAE7B;AACJC,MAAAA,UAAU,EAAE,IADR;AAEJC,MAAAA,UAAU,EAAE,CAFR;AAGJC,MAAAA,SAAS,EAAE,KAHP;AAIJC,MAAAA,UAAU,EAAE,KAJR;AAKJC,MAAAA,OAAO,EAAE;AALL,KAF6B;;AAAA,SAiCrCC,aAjCqC,GAiCpBC,IAAD,IAAU;AACtB,YAAMC,QAAQ,GAAG,KAAKR,KAAL,CAAWC,UAAX,CAAsBM,IAAtB,CAAjB;AACA,YAAME,QAAQ,GAAGD,QAAQ,GAAG,CAA5B;AACA,YAAME,iBAAiB,GAAG,EACtB,GAAG,KAAKV,KAAL,CAAWC;AADQ,OAA1B;AAIAS,MAAAA,iBAAiB,CAACH,IAAD,CAAjB,GAA0BE,QAA1B;AACA,YAAME,aAAa,GAAGlB,gBAAgB,CAACc,IAAD,CAAtC;AACA,YAAMK,QAAQ,GAAG,KAAKZ,KAAL,CAAWE,UAA5B;AACA,YAAMW,QAAQ,GAAGD,QAAQ,GAAGD,aAA5B;AACA,WAAKG,QAAL,CAAc;AAAEZ,QAAAA,UAAU,EAAEW,QAAd;AAAwBZ,QAAAA,UAAU,EAAES;AAApC,OAAd;AACA,WAAKK,eAAL,CAAqBL,iBAArB;AAEH,KA/CoC;;AAAA,SAiDrCM,iBAjDqC,GAiDjB,MAAM;AACtB,WAAKF,QAAL,CAAc;AAAEV,QAAAA,UAAU,EAAE;AAAd,OAAd;AACH,KAnDoC;;AAAA,SAsDrCa,gBAtDqC,GAsDjBV,IAAD,IAAU;AAEzB,YAAMC,QAAQ,GAAG,KAAKR,KAAL,CAAWC,UAAX,CAAsBM,IAAtB,CAAjB;AACA,YAAME,QAAQ,GAAGD,QAAQ,GAAG,CAA5B;AACA,YAAME,iBAAiB,GAAG,EACtB,GAAG,KAAKV,KAAL,CAAWC;AADQ,OAA1B;;AAIA,UAAIO,QAAQ,IAAI,CAAhB,EAAmB;AACf;AACH;;AAEDE,MAAAA,iBAAiB,CAACH,IAAD,CAAjB,GAA0BE,QAA1B;AACA,YAAMS,eAAe,GAAGzB,gBAAgB,CAACc,IAAD,CAAxC;AACA,YAAMK,QAAQ,GAAG,KAAKZ,KAAL,CAAWE,UAA5B;AACA,YAAMW,QAAQ,GAAGD,QAAQ,GAAGM,eAA5B;AACA,WAAKJ,QAAL,CAAc;AAAEZ,QAAAA,UAAU,EAAEW,QAAd;AAAwBZ,QAAAA,UAAU,EAAES;AAApC,OAAd;AACA,WAAKK,eAAL,CAAqBL,iBAArB;AAEH,KAzEoC;;AAAA,SA2ErCS,uBA3EqC,GA2EX,MAAM;AAC5B,WAAKL,QAAL,CAAc;AAAEV,QAAAA,UAAU,EAAE;AAAd,OAAd;AAEH,KA9EoC;;AAAA,SAgFrCgB,gBAhFqC,GAgFlB,MAAM;AAErB,WAAKN,QAAL,CAAc;AAAET,QAAAA,OAAO,EAAE;AAAX,OAAd;AACA,YAAMgB,KAAK,GAAG;AACVpB,QAAAA,UAAU,EAAE,KAAKD,KAAL,CAAWC,UADb;AAEVqB,QAAAA,KAAK,EAAE,KAAKtB,KAAL,CAAWuB,UAFR;AAGVC,QAAAA,QAAQ,EAAE;AACNC,UAAAA,OAAO,EAAE,OADH;AAENC,UAAAA,OAAO,EAAE,QAFH;AAGNC,UAAAA,IAAI,EAAE;AAHA,SAHA;AAQVC,QAAAA,KAAK,EAAE;AARG,OAAd;AAUArC,MAAAA,KAAK,CAACsC,IAAN,CAAW,cAAX,EAA2BR,KAA3B,EACKS,IADL,CACUC,QAAQ,IAAI;AACd,aAAKjB,QAAL,CAAc;AAAET,UAAAA,OAAO,EAAE,KAAX;AAAkBD,UAAAA,UAAU,EAAE;AAA9B,SAAd;AACH,OAHL,EAGO4B,KAHP,CAGaC,KAAK,IAAI,KAAKnB,QAAL,CAAc;AAAET,QAAAA,OAAO,EAAE,KAAX;AAAkBD,QAAAA,UAAU,EAAE;AAA9B,OAAd,CAHtB;AAKH,KAlGoC;AAAA;;AAWrC8B,EAAAA,iBAAiB,GAAG;AAChB3C,IAAAA,KAAK,CAAC4C,GAAN,CAAU,4DAAV,EACKL,IADL,CACUC,QAAQ,IAAI;AACd,WAAKjB,QAAL,CAAc;AAAEb,QAAAA,UAAU,EAAE8B,QAAQ,CAACK;AAAvB,OAAd;AACH,KAHL,EAGOJ,KAHP,CAGaC,KAAK,IAAI,CAAG,CAHzB;AAIH;;AAEDlB,EAAAA,eAAe,CAACd,UAAD,EAAa;AACxB,UAAMoC,GAAG,GAAGC,MAAM,CAACC,IAAP,CAAYtC,UAAZ,EACPuC,GADO,CACHC,MAAM,IAAI;AACX,aAAOxC,UAAU,CAACwC,MAAD,CAAjB;AACH,KAHO,EAGLC,MAHK,CAGE,CAACL,GAAD,EAAMM,EAAN,KAAa;AACnB,aAAON,GAAG,GAAGM,EAAb;AACH,KALO,EAKL,CALK,CAAZ;AAOA,SAAK7B,QAAL,CAAc;AACVX,MAAAA,SAAS,EAAEkC,GAAG,GAAG;AADP,KAAd;AAIH;;AAwEDO,EAAAA,MAAM,GAAG;AAEL,QAAIC,YAAY,GAAG,IAAnB;AACA,QAAIC,MAAM,gBAAG,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAb;;AAEA,QAAG,KAAK9C,KAAL,CAAWC,UAAd,EAAyB;AAGxB6C,MAAAA,MAAM,gBACH,uDACI,oBAAC,MAAD;AAAQ,QAAA,UAAU,EAAE,KAAK9C,KAAL,CAAWC,UAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,eAEI,oBAAC,cAAD;AACI,QAAA,aAAa,EAAE,KAAKK,aADxB;AAEI,QAAA,gBAAgB,EAAE,KAAKW,gBAF3B;AAGI,QAAA,KAAK,EAAE,KAAKjB,KAAL,CAAWE,UAHtB;AAII,QAAA,OAAO,EAAE,KAAKc,iBAJlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFJ,CADH;AAcD6B,MAAAA,YAAY,gBAAG,oBAAC,YAAD;AAAc,QAAA,UAAU,EAAE,KAAK7C,KAAL,CAAWC,UAArC;AAAiD,QAAA,KAAK,EAAE,KAAKD,KAAL,CAAWE,UAAnE;AACX,QAAA,yBAAyB,EAAE,KAAKiB,uBADrB;AAEX,QAAA,uBAAuB,EAAE,KAAKC,gBAFnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAf;;AAKA,UAAI,KAAKpB,KAAL,CAAWK,OAAf,EAAwB;AACpBwC,QAAAA,YAAY,gBAAG,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAf;AAEH;AAEJ;;AAIG,wBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAEI,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAE,KAAK7C,KAAL,CAAWI,UAAxB;AAAoC,MAAA,YAAY,EAAE,KAAKe,uBAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACK0B,YADL,CAFJ,EAOKC,MAPL,CADJ;AAYH;;AAtJoC;;AAyJzC,eAAehD,UAAf","sourcesContent":["import React from 'react';\r\nimport Burger from '../component/Burger/Burger';\r\nimport BurgerControls from '../component/BurgerControls/BurgerControls';\r\nimport OrderSummery from '../component/OrderSummery/OrderSummery';\r\nimport Modal from '../component/UI/Modal/Modal';\r\nimport axios from '../axios-order';\r\nimport Spinner from '../component/UI/Spinner/Spinner';\r\n\r\n\r\nconst INGREDIANT_PRICE = {\r\n    salad: 5,\r\n    meat: 8,\r\n    bacon: 3,\r\n    cheese: 2\r\n}\r\n\r\nclass BagerMaker extends React.Component {\r\n\r\n    state = {\r\n        ingrediant: null,\r\n        totalprice: 5,\r\n        purchased: false,\r\n        purchasing: false,\r\n        loading: false\r\n\r\n    }\r\n\r\n    componentDidMount() {\r\n        axios.get('https://burger-bulder-638c4.firebaseio.com/ingrediant.json')\r\n            .then(response => {\r\n                this.setState({ ingrediant: response.data })\r\n            }).catch(error => { })\r\n    }\r\n\r\n    updatedPurchase(ingrediant) {\r\n        const sum = Object.keys(ingrediant)\r\n            .map(ingKey => {\r\n                return ingrediant[ingKey]\r\n            }).reduce((sum, el) => {\r\n                return sum + el\r\n            }, 0)\r\n\r\n        this.setState({\r\n            purchased: sum > 0\r\n        })\r\n\r\n    }\r\n\r\n\r\n    addIngrediant = (type) => {\r\n        const oldCount = this.state.ingrediant[type];\r\n        const newCount = oldCount + 1;\r\n        const updatedIngrediant = {\r\n            ...this.state.ingrediant\r\n        }\r\n\r\n        updatedIngrediant[type] = newCount;\r\n        const additionPrice = INGREDIANT_PRICE[type];\r\n        const oldPrice = this.state.totalprice;\r\n        const newPrice = oldPrice + additionPrice;\r\n        this.setState({ totalprice: newPrice, ingrediant: updatedIngrediant })\r\n        this.updatedPurchase(updatedIngrediant)\r\n\r\n    }\r\n\r\n    purchasingHandler = () => {\r\n        this.setState({ purchasing: true })\r\n    }\r\n\r\n\r\n    removeIngrediant = (type) => {\r\n\r\n        const oldCount = this.state.ingrediant[type];\r\n        const newCount = oldCount - 1;\r\n        const updatedIngrediant = {\r\n            ...this.state.ingrediant\r\n        }\r\n\r\n        if (oldCount <= 0) {\r\n            return;\r\n        }\r\n\r\n        updatedIngrediant[type] = newCount;\r\n        const priceDiminished = INGREDIANT_PRICE[type];\r\n        const oldPrice = this.state.totalprice;\r\n        const newPrice = oldPrice - priceDiminished;\r\n        this.setState({ totalprice: newPrice, ingrediant: updatedIngrediant })\r\n        this.updatedPurchase(updatedIngrediant)\r\n\r\n    }\r\n\r\n    purchasingCancelHandler = () => {\r\n        this.setState({ purchasing: true })\r\n\r\n    }\r\n\r\n    purchaseContinue = () => {\r\n\r\n        this.setState({ loading: true })\r\n        const order = {\r\n            ingrediant: this.state.ingrediant,\r\n            price: this.state.totlaprice,\r\n            customer: {\r\n                zipCode: '41281',\r\n                country: 'Canada',\r\n                name: 'Emad'\r\n            },\r\n            email: 'test@test.com'\r\n        }\r\n        axios.post('/orders.json', order)\r\n            .then(response => {\r\n                this.setState({ loading: false, purchasing: false })\r\n            }).catch(error => this.setState({ loading: false, purchasing: false }))\r\n\r\n    }\r\n\r\n\r\n\r\n    render() {\r\n\r\n        let orderSummery = null;\r\n        let burger = <Spinner />\r\n\r\n        if(this.state.ingrediant){\r\n\r\n\r\n         burger = (\r\n            <>\r\n                <Burger ingrediant={this.state.ingrediant} />\r\n                <BurgerControls\r\n                    addIngrediant={this.addIngrediant}\r\n                    removeIngrediant={this.removeIngrediant}\r\n                    price={this.state.totalprice}\r\n                    ordered={this.purchasingHandler}\r\n\r\n                />\r\n\r\n\r\n            </>\r\n        )\r\n        orderSummery = <OrderSummery ingrediant={this.state.ingrediant} price={this.state.totalprice}\r\n            purchasingCanceledHandler={this.purchasingCancelHandler}\r\n            purchaseContinueHandler={this.purchaseContinue}\r\n\r\n        />\r\n        if (this.state.loading) {\r\n            orderSummery = <Spinner />\r\n\r\n        }\r\n\r\n    }\r\n        \r\n\r\n      \r\n        return (\r\n            <div>\r\n\r\n                <Modal show={this.state.purchasing} modalCanceld={this.purchasingCancelHandler} >\r\n                    {orderSummery}\r\n\r\n                </Modal>\r\n\r\n                {burger}\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default BagerMaker;\r\n"]},"metadata":{},"sourceType":"module"}