{"ast":null,"code":"var _jsxFileName = \"D:\\\\Full Stack React ver 2\\\\burger bulder in react\\\\src\\\\BurgerMaker\\\\BagerMaker.js\";\nimport React from 'react';\nimport Burger from '../component/Burger/Burger';\nimport BurgerControls from '../component/BurgerControls/BurgerControls';\nimport OrderSummery from '../component/OrderSummery/OrderSummery';\nimport Modal from '../component/UI/Modal/Modal';\nconst INGREDIANT_PRICE = {\n  salad: 5,\n  meat: 8,\n  bacon: 3,\n  cheese: 2\n};\n\nclass BagerMaker extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      ingrediant: {\n        meat: 0,\n        salad: 0,\n        bacon: 0,\n        cheese: 0\n      },\n      totalprice: 5,\n      purchased: false,\n      purchasing: false\n    };\n\n    this.addIngrediant = type => {\n      const oldCount = this.state.ingrediant[type];\n      const newCount = oldCount + 1;\n      const updatedIngrediant = { ...this.state.ingrediant\n      };\n      updatedIngrediant[type] = newCount;\n      const additionPrice = INGREDIANT_PRICE[type];\n      const oldPrice = this.state.totalprice;\n      const newPrice = oldPrice + additionPrice;\n      this.setState({\n        totalprice: newPrice,\n        ingrediant: updatedIngrediant\n      });\n      this.updatedPurchase(updatedIngrediant);\n    };\n\n    this.purchasingHandler = () => {\n      this.setState({\n        purchasing: true\n      });\n    };\n\n    this.removeIngrediant = type => {\n      const oldCount = this.state.ingrediant[type];\n      const newCount = oldCount - 1;\n      const updatedIngrediant = { ...this.state.ingrediant\n      };\n\n      if (oldCount <= 0) {\n        return;\n      }\n\n      updatedIngrediant[type] = newCount;\n      const priceDiminished = INGREDIANT_PRICE[type];\n      const oldPrice = this.state.totalprice;\n      const newPrice = oldPrice - priceDiminished;\n      this.setState({\n        totalprice: newPrice,\n        ingrediant: updatedIngrediant\n      });\n      this.updatedPurchase(updatedIngrediant);\n    };\n\n    this.purchasingCancelHandler = () => {\n      this.setState({\n        purchasing: false\n      });\n    };\n  }\n\n  updatedPurchase(ingrediant) {\n    const sum = Object.keys(ingrediant).map(ingKey => {\n      return ingrediant[ingKey];\n    }).reduce((sum, el) => {\n      return sum + el;\n    }, 0);\n    this.setState({\n      purchased: sum > 0\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Modal, {\n      show: this.state.purchasing,\n      modalCanceld: this.purchasingCancelHandler,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(OrderSummery, {\n      ingrediant: this.state.ingrediant,\n      price: this.state.totalprice,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 21\n      }\n    })), /*#__PURE__*/React.createElement(Burger, {\n      ingrediant: this.state.ingrediant,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(BurgerControls, {\n      addIngrediant: this.addIngrediant,\n      removeIngrediant: this.removeIngrediant,\n      price: this.state.totalprice,\n      ordered: this.purchasingHandler,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 17\n      }\n    }));\n  }\n\n}\n\nexport default BagerMaker;","map":{"version":3,"sources":["D:/Full Stack React ver 2/burger bulder in react/src/BurgerMaker/BagerMaker.js"],"names":["React","Burger","BurgerControls","OrderSummery","Modal","INGREDIANT_PRICE","salad","meat","bacon","cheese","BagerMaker","Component","state","ingrediant","totalprice","purchased","purchasing","addIngrediant","type","oldCount","newCount","updatedIngrediant","additionPrice","oldPrice","newPrice","setState","updatedPurchase","purchasingHandler","removeIngrediant","priceDiminished","purchasingCancelHandler","sum","Object","keys","map","ingKey","reduce","el","render"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport Burger from '../component/Burger/Burger';\r\nimport BurgerControls from '../component/BurgerControls/BurgerControls';\r\nimport OrderSummery from '../component/OrderSummery/OrderSummery';\r\nimport Modal from '../component/UI/Modal/Modal';\r\n\r\n\r\nconst INGREDIANT_PRICE = {\r\n    salad: 5,\r\n    meat: 8,\r\n    bacon: 3,\r\n    cheese: 2\r\n}\r\n\r\nclass BagerMaker extends React.Component {\r\n\r\n    state = {\r\n        ingrediant: {\r\n            meat: 0,\r\n            salad: 0,\r\n            bacon: 0,\r\n            cheese: 0\r\n        },\r\n        totalprice: 5,\r\n        purchased: false,\r\n        purchasing: false\r\n\r\n    }\r\n\r\n\r\n    updatedPurchase(ingrediant) {\r\n        const sum = Object.keys(ingrediant)\r\n            .map(ingKey => {\r\n                return ingrediant[ingKey]\r\n            }).reduce((sum, el) => {\r\n                return sum + el\r\n            }, 0)\r\n\r\n        this.setState({\r\n            purchased: sum > 0\r\n        })\r\n\r\n    }\r\n\r\n\r\n    addIngrediant = (type) => {\r\n        const oldCount = this.state.ingrediant[type];\r\n        const newCount = oldCount + 1;\r\n        const updatedIngrediant = {\r\n            ...this.state.ingrediant\r\n        }\r\n\r\n        updatedIngrediant[type] = newCount;\r\n        const additionPrice = INGREDIANT_PRICE[type];\r\n        const oldPrice = this.state.totalprice;\r\n        const newPrice = oldPrice + additionPrice;\r\n        this.setState({ totalprice: newPrice, ingrediant: updatedIngrediant })\r\n        this.updatedPurchase(updatedIngrediant)\r\n\r\n    }\r\n\r\n    purchasingHandler = () => {\r\n        this.setState({ purchasing: true })\r\n    }\r\n\r\n\r\n    removeIngrediant = (type) => {\r\n\r\n        const oldCount = this.state.ingrediant[type];\r\n        const newCount = oldCount - 1;\r\n        const updatedIngrediant = {\r\n            ...this.state.ingrediant\r\n        }\r\n\r\n        if (oldCount <= 0) {\r\n            return;\r\n        }\r\n\r\n        updatedIngrediant[type] = newCount;\r\n        const priceDiminished = INGREDIANT_PRICE[type];\r\n        const oldPrice = this.state.totalprice;\r\n        const newPrice = oldPrice - priceDiminished;\r\n        this.setState({ totalprice: newPrice, ingrediant: updatedIngrediant })\r\n        this.updatedPurchase(updatedIngrediant)\r\n\r\n    }\r\n\r\n    purchasingCancelHandler = () => {\r\n        this.setState({ purchasing: false })\r\n\r\n    }\r\n\r\n\r\n    render() {\r\n\r\n        return (\r\n            <div>\r\n\r\n                <Modal show={this.state.purchasing} modalCanceld={this.purchasingCancelHandler} >\r\n                    <OrderSummery ingrediant={this.state.ingrediant} price={this.state.totalprice} />\r\n\r\n                </Modal>\r\n                <Burger ingrediant={this.state.ingrediant} />\r\n                <BurgerControls\r\n                    addIngrediant={this.addIngrediant}\r\n                    removeIngrediant={this.removeIngrediant}\r\n                    price={this.state.totalprice}\r\n                    ordered={this.purchasingHandler}\r\n\r\n                />\r\n\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default BagerMaker;\r\n"]},"metadata":{},"sourceType":"module"}